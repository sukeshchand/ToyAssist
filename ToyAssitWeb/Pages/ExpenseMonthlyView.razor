@page "/ExpenseMonthly"
@using BlazorBootstrap
@using ToyAssist.Web.DatabaseModels.Models
@using ToyAssist.Web.Helpers
@using System.Text.Json;
@using System.Collections.Generic;
@using ToyAssist.Web.TypeExtensions;
@using ToyAssist.Web.Shared.Components;
@using ToyAssist.Web.Pages;


<ExpenseMonthlyHandlePaymentModal @ref="@expenseMonthlyHandlePaymentModal" CurrenciesInUse="@CurrenciesInUse"></ExpenseMonthlyHandlePaymentModal>
<ExpenseSetupViewModal @ref="@expenseSetupViewModal"></ExpenseSetupViewModal>


<PageTitle>Assist Toy - Expense Monthly</PageTitle>

<div class="box" style="max-width:580px;">
    <h2 style="padding:10px;">Expense Monthly</h2>
    <div class="row">
        <div class="col-12">
            <div style="display:inline-block;">
                <DateInfoHeader></DateInfoHeader>
            </div>
            <div style="display:inline-block;vertical-align: middle;">
                <table>
                    <tr>
                        <td>
                            <div style="">
                                <Button Color="ButtonColor.Light" style="color:#ccc;" Outline="true" Size="Size.ExtraSmall" @onclick="(data)=>OnShowCurrencyConversion()">
                                    <Icon Name="IconName.CurrencyExchange" />
                                </Button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div style="padding:15px; margin: 5px; border:1px solid #ccc; border-radius:5px;">
        @for (int indexCurrencyGroup = 0; indexCurrencyGroup < ViewModel.CurrencyGroups.Count; indexCurrencyGroup++)
        {
            <div style="border:1px solid #ccc; border-radius:5px; margin:5px;">
                @{
                    var currencyGroup = ViewModel.CurrencyGroups[indexCurrencyGroup];
                }
                @for (int indexExpenseItem = 0; indexExpenseItem < currencyGroup.ExpenseItems.Count; indexExpenseItem++)
                {
                    var expenseItem = ViewModel.CurrencyGroups[indexCurrencyGroup].ExpenseItems[indexExpenseItem];
                    <div class="row" style="padding:10px; margin:5px; border: 0px groove white; border-radius:5px;">
                        <div class="col-6 box">
                            <div class="row">
                                <div class="col-8">
                                    @expenseItem.ExpenseSetup.ExpenseName
                                </div>
                                <div class="col-4">

                                    <Button Color="ButtonColor.Light" Style="color:#b6b6b6" Outline="true" Size="Size.ExtraSmall" @onclick="(data)=>OnViewExpenseItemClick(expenseItem)">
                                        <Icon Name="IconName.ZoomIn" />
                                    </Button>
                                </div>
                            </div>
                            @if (@expenseItem.BillGeneratedText != null)
                            {
                                <div style="border: 1px solid #ffa200; border-radius: 5px; padding: 5px; width: fit-content; font-size: small; margin: 5px 0 5px 0;">
                                    @expenseItem.BillGeneratedText
                                </div>
                            }
                            @if (@expenseItem.BillPaymentText != null)
                            {
                                <div style="border: 1px solid red; border-radius: 5px; padding: 5px; width: fit-content; font-size: small; margin: 5px 0 5px 0;">
                                    @expenseItem.BillPaymentText
                                </div>
                            }
                        </div>
                        <div class="box col-6" style="text-align:right;">

                            <AmountBox Amount="@expenseItem?.ExpenseSetup.Amount" TaxAmount="@expenseItem?.ExpenseSetup.TaxAmount" Currency="@currencyGroup?.Currency"></AmountBox>

                            @if (IsShowCurrencyConversion)
                            {
                                <div style="margin-right: -25px;">
                                    <CurrencyConversionBox IsShowBaseAmount="false" IsShowBox="false" CurrencyFrom="@currencyGroup?.Currency" CurrenciesTo="@CurrenciesInUse" Amount="@expenseItem.ExpenseSetup.Amount"></CurrencyConversionBox>
                                </div>
                            }

                            @* Payment Handle *@
                            @{
                                var currentExpensePayment = expenseItem.ExpensePayments.FirstOrDefault(x=>x.IsCurrent == true);
                            }
                            @if(currentExpensePayment?.ExpensePayment?.ExpensePaymentStatus == Enums.ExpensePaymentStatusEnum.Done)
                            {
                                <div style="text-align:right; margin: 5px 0 5px 5px; margin-right: -10px;">
                                    <Button Color="ButtonColor.Success" Size="Size.ExtraSmall" @onclick="(data)=>onHandlePayment(expenseItem)">
                                        <Icon Name="IconName.CheckCircleFill"></Icon>
                                        <span>
                                            Payment handled - Done
                                        </span>
                                    </Button>
                                </div>
                            }
                            else
                            {
                                <div style="text-align:right; margin: 5px 0 5px 5px; margin-right: -10px;">
                                    <Button Color="ButtonColor.Danger" Size="Size.ExtraSmall" @onclick="(data)=>onHandlePayment(expenseItem)">
                                        <Icon Name="IconName.ExclamationCircleFill"></Icon>
                                        <span>
                                            Payment not handled
                                        </span>
                                    </Button>
                                </div>
                            }
                        </div>
                    </div>

                    <hr style="border:1px solid #ccc;" />
                    @if (indexExpenseItem == currencyGroup.ExpenseItems.Count - 1)
                    {
                        <div class="row" style="padding:10px; margin:5px; border: 0px groove white; border-radius:5px;">
                            <div class="col-6 box">
                                <span style="font-weight:bold; font-size:large">
                                    @currencyGroup?.Currency.CurrencyCode
                                </span>
                                <span style="margin-left:5px; font-weight:bold">
                                    total
                                </span>
                            </div>
                            <div class="box col-6" style="text-align:right;">
                                <span style="font-weight:bold">
                                    @(GeneralHelper.FormattedAmount(@currencyGroup.TotalAmount + @currencyGroup.TotalTaxAmount, @currencyGroup?.Currency))
                                </span>
                                @if (IsShowCurrencyConversion)
                                {
                                    <div style="margin: 10px 0 10px 0;">
                                        <CurrencyConversionBox CurrencyFrom="@currencyGroup.Currency" CurrenciesTo="@CurrenciesInUse" Amount="@currencyGroup.TotalAmount"></CurrencyConversionBox>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        }
    </div>
</div>