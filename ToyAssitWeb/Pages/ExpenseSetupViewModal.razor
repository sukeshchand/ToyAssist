@using BlazorBootstrap
@using System.Text.Json.Serialization
@using ToyAssist.Web.DatabaseModels.Models
@using ToyAssist.Web.Helpers
@using System.Text.Json;
@using System.Collections.Generic;
@using ToyAssist.Web.TypeExtensions;
@inject IJSRuntime JSRuntime;

@{
    JsonSerializerOptions options = new()
            {
                ReferenceHandler = ReferenceHandler.IgnoreCycles,
                WriteIndented = true
            };
}

<Modal @ref="@ModalRef" Title="@ModalData?.ExpenseName" Size="ModalSize.Large">
    <BodyTemplate>
        <div>
            @ModalData.ExpenseName
        </div>

        <ExpenseSetupViewTotals ModalData="@ModalData"></ExpenseSetupViewTotals>

        <hr />

        @if (@ModalData?.StartDate != null && @ModalData.EndDate != null)
        {
            <div>
                <div>
                    <div class="row" style="margin: 2px; padding:2px;">
                        <div class="col-1">
                            Serial
                        </div>
                        <div class="col-4">
                            Date
                        </div>
                        <div class="col-3">
                            Amount
                        </div>
                        <div class="col-4">
                            Status
                        </div>
                    </div>
                    @{

                        var list = GetExpenseRunningList(@ModalData);
                    }
                    <div style="height:300px; overflow-y:scroll;">
                        @for (var i = 0; i < list.Count; i++)
                        {
                            var currentItemStyle = !@list[i].IsCurrentItem ? "padding:5px; margin:5px;" : "margin: 10px 5px 10px 5px; border: 3px solid red; border-radius: 5px; padding: 10px 2px 10px 2px; background: bisque; color:black; font-size:large;";
                            var currentItemToolTip = @list[i].IsCurrentItem ? "Current Item" : "";
                            if (list[i].IsCurrentItem)
                            {
                                <div class="row" @ref="@elementRefToScrollInto">
                                    <div class="col">
                                    </div>
                                </div>
                            }
                            <div class="row" style="@currentItemStyle" title="@currentItemToolTip">
                                @if (@list[i].IsCurrentItem)
                                {
                                    <div class="row" style="padding: 3px; margin: 4px; color: darkgreen;  font-size: small;">
                                        <div class="col-12">
                                            Current item
                                        </div>
                                    </div>
                                }
                                <div class="col-1">
                                    @list[i].Index
                                </div>
                                <div class="col-4">
                                    @list[i].DateAndTime?.ToShortDateString()
                                </div>
                                <div class="col-3">
                                    @(list[i].TotalAmount.ToStringCustom())
                                </div>
                                <div class="col-4">
                                    @{
                                        var styleStatus = "";
                                        if (@list[i].IsCurrentItem)
                                        {
                                            styleStatus = "border: 1px solid green; border-radius: 3px; padding: 3px; background: cyan; color: red;";
                                        }
                                        else if (@list[i].Status == "Paid")
                                        {
                                            styleStatus = "border: 1px solid gray; border-radius: 3px; padding: 3px; background: lightgreen; color: black;";
                                        }
                                        else if (@list[i].Status == "Pending")
                                        {
                                            styleStatus = "border: 1px solid gray; border-radius: 3px; padding: 3px; background: lightpink; color: gray;";
                                        }

                                    }
                                    <span style="@styleStatus">
                                        @list[i].Status
                                    </span>
                                </div>
                            </div>

                            if (@list[i].IsYearBreak)
                            {
                                <hr />
                            }

                        }

                    </div>
                </div>
            </div>
        }
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
        <Button Color="ButtonColor.Primary" @onclick="OnHideModalClick">Save changes</Button>
    </FooterTemplate>
</Modal>