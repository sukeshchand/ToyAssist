@page "/ExpenseSetup"
@using BlazorBootstrap
@using ToyAssist.Web.DatabaseModels.Models
@using ToyAssist.Web.Helpers
@using System.Text.Json;
@using System.Collections.Generic;
@using ToyAssist.Web.TypeExtensions;
@using ToyAssist.Web.Shared.Components;

<PageTitle>Assist Toy - Expense Setup</PageTitle>

<ExpenseSetupViewModal @ref="@expenseSetupViewModal"></ExpenseSetupViewModal>

<div class="box" style="width:100%">
    <h2 style="padding:10px;">Expense setup</h2>
    
    <DateInfoHeader></DateInfoHeader>

    <div style="padding:15px; margin: 5px; border:1px solid #ccc; border-radius:5px">
        <div class="row">
            <div class="col-4 head col-descr box">Detail</div>
            <div class="col-2 head col-amt box">Amount</div>
            <div class="col-2 head col-bill-setting box">Bill Generation</div>
            <div class="col-2 head col-payment-setting col box">Payment</div>
            <div class="col-1 head col-start-end-dt box">Start/End</div>
            <div class="col-1 head col-links box"></div>
        </div>

        <hr />
        @{
            var currencyGroups = ExpenseSetups.GroupBy(x => x.Currency).Select(currencyGroup => new { currencyGroup }).ToList();
        }
        @foreach (var currencyGroupItem in currencyGroups)
        {
            var expenseSetupsByCurrency = ExpenseSetups.Where(x => x.CurrencyId == currencyGroupItem.currencyGroup.Key?.CurrencyId).ToList();
            @foreach (var (expenseSetup, index) in expenseSetupsByCurrency.Select((value, i) => (value, i)))
            {
                <div class="row" style="padding: 6px;">
                    <div class="col-4 col-descr box">@expenseSetup.ExpenseName</div>
                    <div class="col-2 col-amt box">
                        <div class="row">
                            <div class="col-12">
                                <span style="display:inline-block" tabindex="0" data-toggle="tooltip" title="@GetConversionListForToolTip(@currencyGroupItem.currencyGroup.Key, (int)@expenseSetup.Amount)">
                                    @expenseSetup.Amount.ToStringCustom() @currencyGroupItem.currencyGroup.Key?.CurrencyCode
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-2 col-bill-setting box">
                        @if ((expenseSetup.BillGeneratedDay ?? 0) != 0)
                        {
                            <span>
                                @expenseSetup.BillGeneratedDay.ToString()
                            </span>
                            <sup>
                                @(GeneralHelper.GetOrdinalSuffix((expenseSetup.BillGeneratedDay)))
                            </sup>
                            <span>
                                of every month
                            </span>
                        }
                    </div>
                    <div class="col-2 col-payment-setting box">
                        @if ((expenseSetup.BillPaymentDay ?? 0) != 0)
                        {
                            <span>
                                @expenseSetup.BillPaymentDay
                            </span>
                            <sup>
                                @(GeneralHelper.GetOrdinalSuffix((expenseSetup.BillPaymentDay)))
                            </sup>
                            <span>
                                of every month
                            </span>
                        }
                    </div>
                    <div class="col-1 col-start-end-dt box">
                        <div style="padding:3px;">
                            @{
                                var recurringInfo = @GetRecurringInfo(@expenseSetup.StartDate, @expenseSetup.EndDate);
                            }
                            @for (int i = 0; i < recurringInfo.Count; i++)
                            {
                                var fontSize = i != 0 ? "font-size: small" : "";
                                <div data-toggle="tooltip" title="@recurringInfo[i].ToolTipText" style="@fontSize">
                                    @recurringInfo[i].Text
                                </div>
                            }
                            <Button Color="ButtonColor.Secondary" Outline="true" Size="Size.ExtraSmall" @onclick="(data)=>OnShowModalClick(expenseSetup)">
                                <Icon Name="IconName.ThreeDots" />
                            </Button>
                        </div>
                    </div>
                    <div class="col-1 box" style="display: inline-block;">
                        @if (!string.IsNullOrEmpty(expenseSetup.PaymentUrl))
                        {
                            <a href="@expenseSetup.PaymentUrl" target="_blank" class="link-box">Payment</a>
                        }
                        @if (!string.IsNullOrEmpty(expenseSetup.PaymentUrl))
                        {
                            <a href="@expenseSetup.AccountProfileUrl" target="_blank" class="link-box"> Account</a>
                        }
                    </div>
                </div>
                if (index == expenseSetupsByCurrency.Count - 1)
                {
                    var amount = @expenseSetupsByCurrency.Sum(x => x.Amount) ?? 0;
                    <CurrencyConversionBox CurrencyFrom="@currencyGroupItem.currencyGroup.Key" CurrenciesTo="@CurrenciesInUse" Amount="@amount"></CurrencyConversionBox>
                }
                <hr style="border:3px black; border-style: inset;" />
            }
        }
    </div>
</div>