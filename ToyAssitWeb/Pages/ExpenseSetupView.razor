@page "/ExpenseSetup"
@using BlazorBootstrap
@using ToyAssist.Web.DatabaseModels.Models
@using ToyAssist.Web.Helpers
@using System.Text.Json;
@using System.Collections.Generic;
@using ToyAssist.Web.TypeExtensions;
@using ToyAssist.Web.Shared.Components;

<PageTitle>Assist Toy - Expense Setup</PageTitle>

<ExpenseSetupViewModal @ref="@expenseSetupViewModal"></ExpenseSetupViewModal>

<div class="box" style="max-width:580px">
    <h2 style="padding:10px;">Expense setup</h2>

    <DateInfoHeader></DateInfoHeader>

    <div style="padding:15px; margin: 5px; border:1px solid #ccc; border-radius:5px">
        @{
            var groupedCurrencyIds = ExpenseSetups.GroupBy(x => x.Currency.CurrencyId).Select(g => g.Key).ToList();
        }
        @foreach (var groupedCurrencyId in groupedCurrencyIds)
        {
            var expenseSetupsByCurrency = ExpenseSetups.Where(x => x.CurrencyId == groupedCurrencyId).ToList();
            var groupedCurrency = CurrenciesInUse.FirstOrDefault(x => x.CurrencyId == groupedCurrencyId);
            @foreach (var (expenseSetup, index) in expenseSetupsByCurrency.Select((value, i) => (value, i)))
            {
                <div class="row" style="padding: 6px;">
                    <div class="col-6">
                        <h4>@expenseSetup.ExpenseName</h4>

                    </div>
                    <div class="col-6">
                        <div>
                            <h4 style="display:inline;">
                                <AmountBox Amount="@expenseSetup.Amount" TaxAmount="@expenseSetup?.TaxAmount" Currency="@groupedCurrency"></AmountBox>
                            </h4>
                            @if (IsShowCurrencyConversion)
                            {
                                <CurrencyConversionBox CurrencyFrom="@groupedCurrency" CurrenciesTo="@CurrenciesInUse" Amount="@expenseSetup.Amount" IsShowBaseAmount=false IsShowBox=false></CurrencyConversionBox>
                            }
                        </div>
                        <hr / style="margin:0;">
                    </div>
                </div>
                <div class="row" style="padding: 6px;">
                    <div class="col-6">
                        @if ((expenseSetup.BillGeneratedDay ?? 0) != 0)
                        {
                            <div style="border:1px solid #cccccc14; margin: 5px; padding:5px; border-radius: 5px; display: inline-block;">
                                <div>
                                    <span style="font-size: small">Bill generated on:</span>
                                </div>
                                <div >
                                    <span>
                                        @expenseSetup.BillGeneratedDay.ToString()
                                    </span>
                                    <sup>
                                        @(GeneralHelper.GetOrdinalSuffix((expenseSetup.BillGeneratedDay)))
                                    </sup>
                                    <span>
                                        of every month
                                    </span>
                                </div>
                            </div>
                        }
                        @if ((expenseSetup.BillPaymentDay ?? 0) != 0)
                        {
                            <div style="border:1px solid #cccccc14; margin: 5px 5px 5px 0; padding:5px; border-radius: 5px; display: inline-block;">
                                <div>
                                    <span style="font-size: small">Bill to be paid on:</span>
                                </div>
                                <span>
                                    @expenseSetup.BillPaymentDay
                                </span>
                                <sup>
                                    @(GeneralHelper.GetOrdinalSuffix((expenseSetup.BillPaymentDay)))
                                </sup>
                                <span>
                                    of every month
                                </span>
                            </div>
                        }
                    </div>
                    <div class="col-6">
                        <div style="border:1px solid #cccccc14; margin: 5px 5px 5px 0; padding:5px; border-radius: 5px; display: inline-block;">
                            <span style="font-size: small; ">
                                Duration
                            </span>
                            @{
                                var recurringInfo = @GetRecurringInfo(@expenseSetup.StartDate, @expenseSetup.EndDate);
                            }
                            @for (int i = 0; i < recurringInfo.Count; i++)
                            {
                                var fontSize = i != 0 ? "font-size: small" : "";
                                <div data-toggle="tooltip" title="@recurringInfo[i].ToolTipText" style="@fontSize">
                                    @recurringInfo[i].Text
                                </div>
                            }

                        </div>
                        <div>
                            <Button Color="ButtonColor.Light" Style="color:#b6b6b6" Outline="true" Size="Size.ExtraSmall" @onclick="(data)=>OnShowModalClick(expenseSetup)" title="View detailed history, payment information etc">
                                <Icon Name="IconName.ZoomIn" />
                                View more details
                            </Button>
                        </div>
                        <div>
                            @if (!string.IsNullOrEmpty(expenseSetup.PaymentUrl))
                            {
                                <a href="@expenseSetup.PaymentUrl" target="_blank" class="link-box">Payment</a>
                            }
                            @if (!string.IsNullOrEmpty(expenseSetup.PaymentUrl))
                            {
                                <a href="@expenseSetup.AccountProfileUrl" target="_blank" class="link-box"> Account</a>
                            }
                        </div>
                    </div>

                </div>

                if (index == expenseSetupsByCurrency.Count - 1)
                {
                    var amount = @expenseSetupsByCurrency.Sum(x => x.Amount) ?? 0;
                    <div style="margin: 10px;">
                        <CurrencyConversionBox CurrencyFrom="@groupedCurrency" CurrenciesTo="@CurrenciesInUse" Amount="@amount"></CurrencyConversionBox>
                    </div>
                }
                <hr style="border:3px black; border-style: inset;" />
            }
        }
    </div>
</div>